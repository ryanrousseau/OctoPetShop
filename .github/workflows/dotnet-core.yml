name: .NET Core 

on:
  workflow_dispatch:
  push:
    branches: 'main'

permissions:
  id-token: write

env:
  OCTOPUS_SPACE: Kelly's Sandbox

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.version-generator.outputs.version }}

    steps:
    - uses: actions/checkout@v2

    - name: Login to Octopus Deploy 
      uses: OctopusDeploy/login@v1
      with: 
        server: https://demo.octopus.app
        service_account_id: 4d50c8ac-1515-4351-96a7-4a82d55d55ff

    - name: Set Version Number
      id: version-generator
      run: echo "version=$(date +'%Y.%m.%d').$GITHUB_RUN_NUMBER" >> $GITHUB_OUTPUT

    - name: Setup .NET 6
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'

    - name: Install dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Test
      run: dotnet test --no-restore --verbosity normal

    - name: Create artifacts folder
      run: |
        mkdir "$GITHUB_WORKSPACE/artifacts"
        mkdir "$GITHUB_WORKSPACE/artifacts/OctopusSamples.OctoPetShop.Database"
        mkdir "$GITHUB_WORKSPACE/artifacts/OctopusSamples.OctoPetShop.Web"
        mkdir "$GITHUB_WORKSPACE/artifacts/OctopusSamples.OctoPetShop.ProductService"
        mkdir "$GITHUB_WORKSPACE/artifacts/OctopusSamples.OctoPetShop.ShoppingCartService"

    - name: Publish OctoPetShopDatabase
      run: dotnet publish OctopusSamples.OctoPetShop.Database/OctopusSamples.OctoPetShop.Database.csproj --configuration Release --no-restore --output "$GITHUB_WORKSPACE/artifacts/OctopusSamples.OctoPetShop.Database"

    - name: Publish OctoPetShopWeb
      run: dotnet publish OctopusSamples.OctoPetShop.Web/OctopusSamples.OctoPetShop.Web.csproj --configuration Release --no-restore --output "$GITHUB_WORKSPACE/artifacts/OctopusSamples.OctoPetShop.Web"

    - name: Publish OctoPetShopProductService
      run: dotnet publish OctopusSamples.OctoPetShop.ProductService/OctopusSamples.OctoPetShop.ProductService.csproj --configuration Release --no-restore --output "$GITHUB_WORKSPACE/artifacts/OctopusSamples.OctoPetShop.ProductService"

    - name: Publish OctoPetShopShoppingCartService
      run: dotnet publish OctopusSamples.OctoPetShop.ShoppingCartService/OctopusSamples.OctoPetShop.ShoppingCartService.csproj --configuration Release --no-restore --output "$GITHUB_WORKSPACE/artifacts/OctopusSamples.OctoPetshop.ShoppingCartService"

    - name: Package OctoPetShop.Database üêô
      uses: OctopusDeploy/create-zip-package-action@v3
      with:
        package_id: "OctoPetShop.Database"
        version: "${{ steps.version-generator.outputs.version }}"
        output_folder: "${{ github.workspace }}/artifacts"
        base_path: "${{ github.workspace }}/artifacts/OctopusSamples.OctoPetShop.Database"
        files: |
          **/*.*

    - name: Package OctoPetShop.Web üêô
      uses: OctopusDeploy/create-zip-package-action@v3
      with:
        package_id: "OctoPetShop.Web"
        version: "${{ steps.version-generator.outputs.version }}"
        output_folder: "${{ github.workspace }}/artifacts"
        base_path: "${{ github.workspace }}/artifacts/OctopusSamples.OctoPetShop.Web"
        files: |
          **/*.*

    - name: Package OctoPetShop.ProductService üêô
      uses: OctopusDeploy/create-zip-package-action@v3
      with:
        package_id: "OctoPetShop.ProductService"
        version: "${{ steps.version-generator.outputs.version }}"
        output_folder: "${{ github.workspace }}/artifacts"
        base_path: "${{ github.workspace }}/artifacts/OctopusSamples.OctoPetShop.ProductService"
        files: |
          **/*.*

    - name: Package OctoPetShop.ShoppingCartService üêô
      uses: OctopusDeploy/create-zip-package-action@v3
      with:
        package_id: "OctoPetShop.ShoppingCartService"
        version: "${{ steps.version-generator.outputs.version }}"
        output_folder: "${{ github.workspace }}/artifacts"
        base_path: "${{ github.workspace }}/artifacts/OctopusSamples.OctoPetShop.ShoppingCartService"
        files: |
          **/*.*

    - name: Publish Artifacts to Octopus
      uses: OctopusDeploy/push-package-action@v3
      with: 
        packages: |
          artifacts/OctoPetShop.Database.${{ steps.version-generator.outputs.version }}.zip
          artifacts/OctoPetShop.Web.${{ steps.version-generator.outputs.version }}.zip
          artifacts/OctoPetShop.ProductService.${{ steps.version-generator.outputs.version }}.zip
          artifacts/OctoPetShop.ShoppingCartService.${{ steps.version-generator.outputs.version }}.zip

    - uses: OctopusDeploy/push-build-information-action@v3
      name: Push Build Information üêô
      with:
        version: ${{ steps.version-generator.outputs.version }}
        packages: |
          OctoPetShop.Database
          OctoPetShop.Web
          OctoPetShop.ProductService
          OctoPetShop.ShoppingCartService

    - name: Create a release in Octopus Deploy üêô
      id: create-release
      uses: OctopusDeploy/create-release-action@v3
      with:
        project: 'OctoPetShop'
        release_number: ${{ steps.version-generator.outputs.version }}

    - uses: OctopusDeploy/deploy-release-action@v3
      id: deploy-release-to-development
      name: "Deploy release ${{ steps.version-generator.outputs.version }} to Development üêô"
      with:
        project: 'OctoPetShop'
        release_number: ${{ steps.version-generator.outputs.version }}
        environments: "Development"

    - uses: OctopusDeploy/await-task-action@v3
      id: "wait-for-deploy-development"
      name: "Wait for deployment of ${{ steps.version-generator.outputs.version }} to complete üêô"
      with:
        server_task_id: ${{ fromJson(steps.deploy-release-to-development.outputs.server_tasks)[0].serverTaskId }}

    - uses: OctopusDeploy/deploy-release-action@v3
      id: deploy-release-to-test
      name: "Deploy release ${{ steps.version-generator.outputs.version }} to Test üêô"
      with:
        project: 'OctoPetShop'
        release_number: ${{ steps.version-generator.outputs.version }}
        environments: "Test"

    - uses: OctopusDeploy/await-task-action@v3
      id: "wait-for-deploy-test"
      name: "Wait for deployment of ${{ steps.version-generator.outputs.version }} to complete üêô"
      with:
        server_task_id: ${{ fromJson(steps.deploy-release-to-test.outputs.server_tasks)[0].serverTaskId }}

